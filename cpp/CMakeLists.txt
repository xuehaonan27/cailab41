cmake_minimum_required(VERSION 3.10)
project(simd-lab)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

option(SCALAR_O0 "Compile without vectorization and O0" OFF)
option(SCALAR_O1 "Compile without vectorization and O1" OFF)
option(SCALAR_O2 "Compile without vectorization and O2" OFF)
option(SCALAR_O3 "Compile without vectorization and O3" OFF)
option(SCALAR_Ofast "Compile without vectorization and Ofast" OFF)
option(VECTOR_O0 "Compile with vectorization and O0" OFF)
option(VECTOR_O1 "Compile with vectorization and O1" OFF)
option(VECTOR_O2 "Compile with vectorization and O2" OFF)
option(VECTOR_O3 "Compile with vectorization and O3" OFF)
option(VECTOR_Ofast "Compile with vectorization and Ofast" OFF)

option(LAB_TIMING "Calculate timing" OFF)

if(SCALAR_O0)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-tree-vectorize -O0")
elseif(SCALAR_O1)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-tree-vectorize -O1")
elseif(SCALAR_O2)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-tree-vectorize -O2")
elseif(SCALAR_O3)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-tree-vectorize -O3")
elseif(SCALAR_Ofast)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-tree-vectorize -Ofast")
elseif(VECTOR_O0)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native -O0")
elseif(VECTOR_O1)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native -O1")
elseif(VECTOR_O2)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native -O2")
elseif(VECTOR_O3)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native -O3")
elseif(VECTOR_Ofast)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native -Ofast")
else()
    message(FATAL_ERROR "No optimization level specified. Please set one.")
endif()

add_executable(lab41 main.cc)

if(LAB_TIMING)
    add_definitions(-DLAB_TIME)
endif()

if(SCALAR_O0 OR SCALAR_O1 OR SCALAR_O2 OR SCALAR_O3 OR SCALAR_Ofast)
    add_library(plain plain.cc)
    target_link_libraries(lab41 PUBLIC plain)
elseif(VECTOR_O0 OR VECTOR_O1 OR VECTOR_O2 OR VECTOR_O3 OR VECTOR_Ofast)
    add_library(plain plain.cc)
    add_library(mmx mmx.cc)
    add_library(sse2 sse2.cc)
    add_library(avx2 avx2.cc)
    add_library(avx avx.cc)
    add_definitions(-DVECTORIZATION)
    target_link_libraries(lab41 PUBLIC plain mmx sse2 avx2 avx)
endif()
